INT30-C
FIO13-C. Never push back anything other than one read character
Regla implementada para los siguientes casos:
	Liberación de memoria como una función independiente fuera de un contexto

EXP30-C
	https://www.securecoding.cert.org/confluence/display/c/EXP30-C.+Do+not+depend+on+the+order+of+evaluation+for+side+effects
	Caso sin implementación 
			i = ++i + 1;
	Caso aceptado
		i = i++;

EXP32-C
 	https://www.securecoding.cert.org/confluence/display/c/EXP32-C.+Do+not+access+a+volatile+object+through+a+nonvolatile+reference
 	Caso sin implementación
 		Chequeo de casting
 	Caso aceptado
 		void func(void) 
 		{
		  static volatile int **ipp;
		  static int *ip;
		  static volatile int i = 0;
		 
		  printf("i = %d.\n", i);
		 
		  ipp = &ip; /* May produce a warning diagnostic */
		  ipp = (int**) &ip; /* Constraint violation; may produce a warning diagnostic */
		  *ipp = &i; /* Valid */
		  if (*ip != 0) { /* Valid */
		    /* ... */
		  }
		}


FIO45-C
	https://www.securecoding.cert.org/confluence/display/c/FIO45-C.+Avoid+TOCTOU+race+conditions+while+accessing+files
	

FIO46-C
	https://www.securecoding.cert.org/confluence/display/c/FIO46-C.+Do+not+access+a+closed+file

EXP40-C
	https://www.securecoding.cert.org/confluence/display/c/EXP40-C.+Do+not+modify+constant+objects	
***********************************************************************************************************************************************


Rule 04. Integers (INT)



INT30-C. 
	https://www.securecoding.cert.org/confluence/display/c/INT30-C.+Ensure+that+unsigned+integer+operations+do+not+wrap

	Ensure that unsigned integer operations do not wrap
	Regla Implementada para Adición y Substracción de unsigned int 

INT31-C.
	https://www.securecoding.cert.org/confluence/display/c/INT31-C.+Ensure+that+integer+conversions+do+not+result+in+lost+or+misinterpreted+data
	INT31-C. Ensure that integer conversions do not result in lost or misinterpreted data
	Regla implementada para signed to unsigned

INT32-C. 
	https://www.securecoding.cert.org/confluence/display/c/INT32-C.+Ensure+that+operations+on+signed+integers+do+not+result+in+overflow
	Ensure that operations on signed integers do not result	in overflow

INT33-C. 
	https://www.securecoding.cert.org/confluence/display/c/INT33-C.+Ensure+that+division+and+remainder+operations+do+not+result+in+divide-by-zero+errors
	Ensure that division and remainder operations do not result in divide-by-zero errors


Rule 05. Floating Point (FLP)

FLP36-C. 
	https://www.securecoding.cert.org/confluence/display/c/FLP36-C.+Preserve+precision+when+converting+integral+values+to+floating-point+type
	Preserve precision when converting integral values to floating-point type

